// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantBookingApp.Data;

#nullable disable

namespace RestaurantBookingApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250608170134_InitialWithSeedData")]
    partial class InitialWithSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("RestaurantBookingApp.Shared.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReservationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeatsReserved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TableNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientEmail = "jan.kowalski@example.com",
                            ClientName = "Jan Kowalski",
                            ReservationDateTime = new DateTime(2025, 6, 11, 19, 0, 0, 0, DateTimeKind.Local),
                            RestaurantId = 1,
                            SeatsReserved = 2,
                            Status = "Confirmed",
                            TableNumber = 5
                        },
                        new
                        {
                            Id = 2,
                            ClientEmail = "anna.nowak@example.com",
                            ClientName = "Anna Nowak",
                            ReservationDateTime = new DateTime(2025, 6, 13, 20, 0, 0, 0, DateTimeKind.Local),
                            RestaurantId = 2,
                            SeatsReserved = 4,
                            Status = "Confirmed",
                            TableNumber = 1
                        },
                        new
                        {
                            Id = 3,
                            ClientEmail = "piotr.zielinski@example.com",
                            ClientName = "Piotr Zieliński",
                            ReservationDateTime = new DateTime(2025, 6, 11, 19, 0, 0, 0, DateTimeKind.Local),
                            RestaurantId = 1,
                            SeatsReserved = 3,
                            Status = "Confirmed",
                            TableNumber = 6
                        },
                        new
                        {
                            Id = 4,
                            ClientEmail = "k.wisniewska@example.com",
                            ClientName = "Katarzyna Wiśniewska",
                            ReservationDateTime = new DateTime(2025, 6, 7, 18, 0, 0, 0, DateTimeKind.Local),
                            RestaurantId = 3,
                            SeatsReserved = 6,
                            Status = "Confirmed"
                        });
                });

            modelBuilder.Entity("RestaurantBookingApp.Shared.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AveragePrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("CuisineType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AveragePrice = 85.00m,
                            CuisineType = "Włoska",
                            Description = "Autentyczna włoska kuchnia w sercu Krakowa. Specjalizujemy się w pizzy neapolitańskiej i świeżych makaronach.",
                            IsClosed = false,
                            Location = "Kraków, Rynek Główny 10",
                            Name = "Trattoria da Vinci",
                            TotalSeats = 50
                        },
                        new
                        {
                            Id = 2,
                            AveragePrice = 120.00m,
                            CuisineType = "Japońska",
                            Description = "Nowoczesne sushi przygotowywane przez doświadczonych mistrzów. Świeże ryby dostarczane codziennie.",
                            IsClosed = false,
                            Location = "Warszawa, ul. Złota 59",
                            Name = "Sushi Master",
                            TotalSeats = 30
                        },
                        new
                        {
                            Id = 3,
                            AveragePrice = 60.00m,
                            CuisineType = "Polska",
                            Description = "Tradycyjne dania kuchni podhalańskiej w regionalnym wystroju. Spróbuj naszego oscypka z żurawiną!",
                            IsClosed = false,
                            Location = "Zakopane, Krupówki 25",
                            Name = "Góralska Chata",
                            TotalSeats = 80
                        },
                        new
                        {
                            Id = 4,
                            AveragePrice = 150.00m,
                            CuisineType = "Francuska",
                            Description = "Klimatyczne bistro z klasykami kuchni francuskiej. Idealne miejsce na romantyczną kolację.",
                            IsClosed = true,
                            Location = "Gdańsk, ul. Długa 15",
                            Name = "Le Petit Paris",
                            TotalSeats = 25
                        });
                });

            modelBuilder.Entity("RestaurantBookingApp.Shared.Models.Reservation", b =>
                {
                    b.HasOne("RestaurantBookingApp.Shared.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });
#pragma warning restore 612, 618
        }
    }
}
